<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.1 on win32)" generated="20230211 12:53:01.103" rpa="false" schemaversion="3">
<suite id="s1" name="Authentication Tests" source="c:\Users\User\Documents\GitHub\medium-robot-framework-sample\tests\authentication_tests.robot">
<test id="s1-t1" name="Scenario: Standard user logins successfully" line="15">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Start Test</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Start Test" library="runner">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${BASE_URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230211 12:53:01.212" level="INFO">Opening browser 'chrome' to base url 'https://www.saucedemo.com/'.</msg>
<status status="PASS" starttime="20230211 12:53:01.211" endtime="20230211 12:53:04.338"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>${SCREEN_WIDTH}</arg>
<arg>${SCREEN_HEIGHT}</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20230211 12:53:04.338" endtime="20230211 12:53:04.443"/>
</kw>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<arg>30 seconds</arg>
<doc>Sets the timeout that is used by various keywords.</doc>
<status status="PASS" starttime="20230211 12:53:04.443" endtime="20230211 12:53:04.444"/>
</kw>
<status status="PASS" starttime="20230211 12:53:01.211" endtime="20230211 12:53:04.444"/>
</kw>
<status status="PASS" starttime="20230211 12:53:01.211" endtime="20230211 12:53:04.444"/>
</kw>
<kw name="Given Peny is on the login page" library="login_page_steps">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${LOGIN_PAGE_IDENTIFIER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230211 12:53:04.445" endtime="20230211 12:53:04.481"/>
</kw>
<kw name="Get Location" library="SeleniumLibrary">
<var>${current_url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20230211 12:53:04.483" level="INFO">${current_url} = https://www.saucedemo.com/</msg>
<status status="PASS" starttime="20230211 12:53:04.481" endtime="20230211 12:53:04.483"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${current_url}</arg>
<arg>${BASE_URL}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230211 12:53:04.484" endtime="20230211 12:53:04.484"/>
</kw>
<status status="PASS" starttime="20230211 12:53:04.445" endtime="20230211 12:53:04.484"/>
</kw>
<kw name="When Peny inserts their default username" library="login_page_steps" sourcename="Peny inserts their ${type} username">
<if>
<branch type="IF" condition="&quot;&quot;&quot;${type}&quot;&quot;&quot; == &quot;&quot;&quot;default&quot;&quot;&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${username}</var>
<arg>${DEFAULT_USERNAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230211 12:53:04.485" level="INFO">${username} = standard_user</msg>
<status status="PASS" starttime="20230211 12:53:04.484" endtime="20230211 12:53:04.485"/>
</kw>
<status status="PASS" starttime="20230211 12:53:04.484" endtime="20230211 12:53:04.485"/>
</branch>
<status status="PASS" starttime="20230211 12:53:04.484" endtime="20230211 12:53:04.485"/>
</if>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${type}&quot;&quot;&quot; == &quot;&quot;&quot;locked out&quot;&quot;&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${username}</var>
<arg>${LOCKED_USER}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230211 12:53:04.485" endtime="20230211 12:53:04.485"/>
</kw>
<status status="NOT RUN" starttime="20230211 12:53:04.485" endtime="20230211 12:53:04.485"/>
</branch>
<status status="PASS" starttime="20230211 12:53:04.485" endtime="20230211 12:53:04.485"/>
</if>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LOGIN_USERNAME_FIELD}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230211 12:53:04.485" level="INFO">Typing text 'standard_user' into text field 'css=input[data-test="username"]'.</msg>
<status status="PASS" starttime="20230211 12:53:04.485" endtime="20230211 12:53:04.524"/>
</kw>
<status status="PASS" starttime="20230211 12:53:04.484" endtime="20230211 12:53:04.524"/>
</kw>
<kw name="And Peny inserts their default password" library="login_page_steps" sourcename="Peny inserts their ${type} password">
<if>
<branch type="IF" condition="&quot;&quot;&quot;${type}&quot;&quot;&quot; == &quot;&quot;&quot;default&quot;&quot;&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${password}</var>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230211 12:53:04.525" level="INFO">${password} = secret_sauce</msg>
<status status="PASS" starttime="20230211 12:53:04.525" endtime="20230211 12:53:04.525"/>
</kw>
<status status="PASS" starttime="20230211 12:53:04.524" endtime="20230211 12:53:04.525"/>
</branch>
<status status="PASS" starttime="20230211 12:53:04.524" endtime="20230211 12:53:04.525"/>
</if>
<if>
<branch type="IF" condition="&quot;&quot;&quot;${type}&quot;&quot;&quot; == &quot;&quot;&quot;invalid&quot;&quot;&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${password}</var>
<arg>iminvalid:(</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230211 12:53:04.525" endtime="20230211 12:53:04.525"/>
</kw>
<status status="NOT RUN" starttime="20230211 12:53:04.525" endtime="20230211 12:53:04.525"/>
</branch>
<status status="PASS" starttime="20230211 12:53:04.525" endtime="20230211 12:53:04.525"/>
</if>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LOGIN_PASSWORD_FIELD}</arg>
<arg>${password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230211 12:53:04.526" level="INFO">Typing text 'secret_sauce' into text field 'css=input[data-test="password"]'.</msg>
<status status="PASS" starttime="20230211 12:53:04.525" endtime="20230211 12:53:04.561"/>
</kw>
<status status="PASS" starttime="20230211 12:53:04.524" endtime="20230211 12:53:04.562"/>
</kw>
<kw name="And Peny clicks the login button" library="login_page_steps">
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230211 12:53:04.563" level="INFO">Clicking button 'css=input[data-test="login-button"]'.</msg>
<status status="PASS" starttime="20230211 12:53:04.562" endtime="20230211 12:53:04.603"/>
</kw>
<status status="PASS" starttime="20230211 12:53:04.562" endtime="20230211 12:53:04.603"/>
</kw>
<kw name="Then Peny should see the inventory page" library="inventory_page_steps">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${INVENTORY_PAGE_IDENTIFIER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230211 12:53:04.603" endtime="20230211 12:53:04.615"/>
</kw>
<kw name="Get Location" library="SeleniumLibrary">
<var>${current_url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20230211 12:53:04.617" level="INFO">${current_url} = https://www.saucedemo.com/inventory.html</msg>
<status status="PASS" starttime="20230211 12:53:04.615" endtime="20230211 12:53:04.617"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${current_url}</arg>
<arg>/inventory.html</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230211 12:53:04.617" endtime="20230211 12:53:04.618"/>
</kw>
<status status="PASS" starttime="20230211 12:53:04.603" endtime="20230211 12:53:04.618"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>End Test</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="End Test" library="runner">
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20230211 12:53:06.620" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20230211 12:53:04.619" endtime="20230211 12:53:06.620"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230211 12:53:06.775" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230211 12:53:06.620" endtime="20230211 12:53:06.776"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230211 12:53:06.776" endtime="20230211 12:53:08.885"/>
</kw>
<status status="PASS" starttime="20230211 12:53:04.619" endtime="20230211 12:53:08.886"/>
</kw>
<status status="PASS" starttime="20230211 12:53:04.618" endtime="20230211 12:53:08.886"/>
</kw>
<doc>Successfull outcome when standard credentials are used.

Relevant Business Rules:
- User must be redirected to the inventory page after a sucessfull login

Bugs: &lt;link-to-issue-tracker&gt;</doc>
<tag>REGRESSION</tag>
<tag>SMOKE</tag>
<status status="PASS" starttime="20230211 12:53:01.210" endtime="20230211 12:53:08.887"/>
</test>
<doc>AUTHENTICATION TESTS

Tests from Login Feature are written in this file using Gherkin Syntax.
Specs: &lt;link-to-documentation-or-prototype&gt;</doc>
<status status="PASS" starttime="20230211 12:53:01.110" endtime="20230211 12:53:08.887"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">REGRESSION</stat>
<stat pass="1" fail="0" skip="0">SMOKE</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Authentication Tests">Authentication Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
